apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-compact
  namespace: monitoring
  labels:
    component: database-compactor
    name: thanos-compact
spec:
  serviceName: thanos-compact
  selector:
    matchLabels:
      component: database-compactor
      name: thanos-compact
  replicas: 1
  updateStrategy:
    type: RollingUpdate  
  template:
    metadata:
      labels:
        component: database-compactor
        name: thanos-compact
    spec:
      containers:
      - name: thanos-compact
        image: quay.io/thanos/thanos:thanos:v0.13.0-rc.0
        args:
        - compact
        - "--wait"
        - "--objstore.config=$(OBJSTORE_CONFIG)"
        - "--data-dir=/var/thanos/compact"
        - "--debug.accept-malformed-index"
        env:
        - name: OBJSTORE_CONFIG
          valueFrom:
            secretKeyRef:
              key: thanos.yaml
              name: thanos-objectstorage
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: 10902
            scheme: HTTP
          periodSeconds: 30
        ports:
        - containerPort: 10902
          name: http
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: 10902
            scheme: HTTP
          periodSeconds: 5
        resources:
          {}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: thanos-compact
          mountPath: /var/thanos/compact
          readOnly: false
      terminationGracePeriodSeconds: 120
  volumeClaimTemplates:
  - metadata:
      name: thanos-compact
    spec:
      storageClassName: standard
      accessModes: 
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 8Gi