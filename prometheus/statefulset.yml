apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: monitoring
spec:
  serviceName: prometheus
  selector:
    matchLabels: 
      app:  prometheus
      component: server
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prometheus
        component: server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - prometheus
              namespaces:
                - "monitoring"
              topologyKey: "kubernetes.io/hostnames"
      securityContext:
        fsGroup: 2000
        runAsUser: 1000
        runAsNonRoot: true
      serviceAccountName: prometheus
      containers:
      - name: prometheus-server-configmap-reload
        image: "jimmidyson/configmap-reload:v0.3.0"
        imagePullPolicy: "IfNotPresent"
        args:
          - "--volume-dir=/etc/prometheus"
          - "--webhook-url=http://127.0.0.1:9090/-/reload"
        resources:
          {}
        volumeMounts:
          - name: prometheus-server-conf
            mountPath: /etc/prometheus
            readOnly: true
      - name: prometheus
        image: quay.io/prometheus/prometheus:v2.20.1
        args:
          - "--storage.tsdb.retention=4h"
          - "--config.file=/etc/prometheus-shared/prometheus.yml"
          - "--storage.tsdb.path=/data"
          - "--web.console.libraries=/etc/prometheus/console_libraries"
          - "--web.console.templates=/etc/prometheus/consoles"
          - "--web.enable-lifecycle"
          - "--log.level=debug"
          - "--storage.tsdb.max-block-duration=2h"
          - "--storage.tsdb.min-block-duration=2h"
        ports:
          - name: prometheus
            containerPort: 9090
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 40
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        volumeMounts:
          - name: prometheus-storage
            mountPath: /data/
          - name: prometheus-server-conf
            mountPath: /etc/prometheus
            readOnly: false
          - name: prometheus-config-shared
            mountPath: /etc/prometheus-shared/
            readOnly: false
      - name: thanos-sidecar
        image: quay.io/thanos/thanos:master-2019-11-26-82c005d9
        imagePullPolicy: "IfNotPresent"
        args:
          - sidecar
          - "--log.level=debug"
          - "--tsdb.path=/data/"
          - "--prometheus.url=http://127.0.0.1:9090"
          - "--objstore.config=$(OBJSTORE_CONFIG)"
          - "--reloader.config-file=/etc/prometheus/prometheus.yml"
          - "--reloader.config-envsubst-file=/etc/prometheus-shared/prometheus.yml"
        env:
         - name: OBJSTORE_CONFIG
           valueFrom:
             secretKeyRef:
               key: thanos.yaml
               name: thanos-objstore-config
        volumeMounts:
          - name: prometheus-storage
            mountPath: /data/
          - name: prometheus-server-conf
            mountPath: /etc/prometheus
            readOnly: false
          - name: prometheus-config-shared
            mountPath: /etc/prometheus-shared/
            readOnly: false
        ports:
          - containerPort: 10902
            name: sidecar-http
          - containerPort: 10901
            name: grpc
          - containerPort: 10900
            name: cluster
      volumes:
        - name: prometheus-server-conf
          configMap:
            name: prometheus-server-conf
        - name: prometheus-config-shared
          emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: prometheus-storage
    spec:
      storageClassName: standard
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 8Gi